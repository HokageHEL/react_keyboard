{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","React","useState","pressedKey","setPressedKey","useEffect","handleKeyDown","event","key","window","addEventListener","removeEventListener","className","ReactDOM","render","document","getElementById"],"mappings":"+LAEaA,EAAgB,WAC3B,MAAoCC,IAAMC,SAAiB,IAA3D,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OAZAC,qBAAU,WACR,IAAMC,EAAgB,SAACC,GACrBH,EAAcG,EAAMC,MAKtB,OAFAC,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,MAEvC,IAGD,qBAAKM,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SACGT,EAAU,uBAAmBA,GAAe,+B,MCfrDU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.50adb1b3.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\n\nexport const App: React.FC = () => {\n  const [pressedKey, setPressedKey] = React.useState<string>('');\n\n  useEffect(() => {\n    const handleKeyDown = (event: KeyboardEvent) => {\n      setPressedKey(event.key);\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <p className=\"App__message\">\n        {pressedKey ? `Pressed key: ${pressedKey}` : 'Nothing was pressed yet'}\n      </p>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}